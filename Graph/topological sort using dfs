#include <bits/stdc++.h> 
void topoDFS(int node, vector<bool> &visited,unordered_map<int, vector<int>> &adj, stack<int> &s){
    visited[node]=true;
    for(auto neighbour : adj[node]){
        if(!visited[neighbour]){
            topoDFS(neighbour,visited,adj,s);
        }
    }
    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    unordered_map<int, vector<int>> adj;
    for(int i=0; i<edges.size(); i++){
        int u = edges[i][0];
        int v = edges[i][1];

        adj[u].push_back(v);
    }
    stack<int> s;
    vector<bool> visited(v);//important
    vector<int> ans;

    for(int i = 0; i < v; i++){
        if(!visited[i]){
            topoDFS(i,visited,adj,s);
        }
    }
    while(!s.empty()){
        int temp = s.top();
        ans.push_back(temp);
        s.pop();
    }
    return ans;
}
